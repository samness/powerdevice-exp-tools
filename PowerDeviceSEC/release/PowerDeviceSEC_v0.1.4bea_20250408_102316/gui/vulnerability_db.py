"""
设备漏洞数据库
版本: v0.1.3bea
"""

class VulnerabilityInfo:
    def __init__(self, vuln_id, name, description, params, impact_level, cvss_score=None):
        self.vuln_id = vuln_id          # 漏洞唯一ID
        self.name = name                # 漏洞名称
        self.description = description  # 漏洞描述
        self.params = params            # 所需参数
        self.impact_level = impact_level  # 影响等级
        self.cvss_score = cvss_score    # CVSS评分

# 火力发电设备漏洞库
THERMAL_POWER_VULNS = {
    "西门子 SGT-800": {
        "SGT800-V001": VulnerabilityInfo(
            "SGT800-V001",
            "西门子SGT-800 PLC认证绕过",
            "通过修改特定内存地址，可以绕过PLC的访问控制认证",
            {"memory_addr": "起始地址", "bypass_code": "绕过代码"},
            "高危",
            "9.8"
        ),
        "SGT800-V002": VulnerabilityInfo(
            "SGT800-V002",
            "西门子SGT-800温度控制器溢出",
            "温度控制器存在缓冲区溢出漏洞，可导致系统崩溃",
            {"temp_value": "温度值", "overflow_len": "溢出长度"},
            "严重",
            "8.5"
        )
    },
    "GE LM6000": {
        "LM6000-V001": VulnerabilityInfo(
            "LM6000-V001",
            "GE LM6000控制系统后门",
            "控制系统存在硬编码的后门账户",
            {"backdoor_user": "后门用户名", "backdoor_pass": "后门密码"},
            "严重",
            "9.5"
        )
    },
    "三菱 M701F": {
        "M701F-V001": VulnerabilityInfo(
            "M701F-V001",
            "三菱M701F通信协议漏洞",
            "通信协议中存在命令注入漏洞",
            {"command": "注入命令", "protocol_ver": "协议版本"},
            "高危",
            "8.8"
        )
    }
}

# 水利发电设备漏洞库
HYDRO_POWER_VULNS = {
    "VH喷嘴冲击式机组": {
        "VH-V001": VulnerabilityInfo(
            "VH-V001",
            "VH喷嘴压力控制漏洞",
            "压力控制系统存在越界写漏洞",
            {"pressure": "压力值", "control_reg": "控制寄存器"},
            "高危",
            "8.2"
        )
    },
    "AHM调速系统": {
        "AHM-V001": VulnerabilityInfo(
            "AHM-V001",
            "AHM调速器配置漏洞",
            "调速器配置文件存在未授权访问漏洞",
            {"config_path": "配置路径", "access_type": "访问类型"},
            "中危",
            "6.5"
        )
    }
}

# 光伏发电设备漏洞库
SOLAR_POWER_VULNS = {
    "FSS7薄膜组件": {
        "FSS7-V001": VulnerabilityInfo(
            "FSS7-V001",
            "FSS7控制器固件漏洞",
            "控制器固件更新机制存在验证绕过漏洞",
            {"firmware_ver": "固件版本", "bypass_hash": "绕过哈希"},
            "严重",
            "9.1"
        )
    },
    "SPMa6": {
        "SPMa6-V001": VulnerabilityInfo(
            "SPMa6-V001",
            "SPMa6电流控制漏洞",
            "电流控制模块存在参数注入漏洞",
            {"current": "电流值", "control_param": "控制参数"},
            "高危",
            "8.4"
        )
    }
}

# 风力发电设备漏洞库
WIND_POWER_VULNS = {
    "VV236": {
        "VV236-V001": VulnerabilityInfo(
            "VV236-V001",
            "VV236变桨控制漏洞",
            "变桨控制系统存在远程代码执行漏洞",
            {"angle": "桨叶角度", "exec_code": "执行代码"},
            "严重",
            "9.3"
        )
    },
    "SGSG14-222": {
        "SGSG14-V001": VulnerabilityInfo(
            "SGSG14-V001",
            "SGSG14通信加密漏洞",
            "通信加密模块存在密钥泄露漏洞",
            {"key_id": "密钥ID", "leak_type": "泄露类型"},
            "高危",
            "8.7"
        )
    }
}

# 设备类型到漏洞库的映射
DEVICE_VULN_MAPPING = {
    "火力发电": THERMAL_POWER_VULNS,
    "水利发电": HYDRO_POWER_VULNS,
    "光伏发电": SOLAR_POWER_VULNS,
    "风力发电": WIND_POWER_VULNS
}

def get_device_vulnerabilities(power_type, device_model):
    """获取指定设备型号的所有漏洞信息"""
    vuln_db = DEVICE_VULN_MAPPING.get(power_type, {})
    return vuln_db.get(device_model, {})

def get_vulnerability_info(power_type, device_model, vuln_id):
    """获取指定漏洞的详细信息"""
    vulns = get_device_vulnerabilities(power_type, device_model)
    return vulns.get(vuln_id)

def get_all_vulnerability_ids(power_type, device_model):
    """获取指定设备型号的所有漏洞ID列表"""
    vulns = get_device_vulnerabilities(power_type, device_model)
    return list(vulns.keys()) 